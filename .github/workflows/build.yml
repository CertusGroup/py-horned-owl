name: Build
on:
  push:
    branches:
        - master
        - build

  pull_request:
    branches:
        - master
        - build

jobs:
  build:
    name: Create Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          python-version: "3.7"
          artifact_name: py-horned-owl.zip
          asset_name: py-horned-owl-linux-amd64
        - os: windows-latest
          python-version: "3.7"
          artifact_name: py-horned-owl.zip
          asset_name: py-horned-owl-windows-amd64
        - os: macos-latest
          python-version: "3.7"
          artifact_name: py-horned-owl.zip
          asset_name: py-horned-owl-macos-amd64
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install maturin==0.13.2
      - name: Build
        run: |
          maturin build
          zip -r ${{ matrix.asset_name }} ./target/wheels/*.whl
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - No changes
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/zip
